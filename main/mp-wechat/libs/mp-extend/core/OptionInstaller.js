import BehaviorInstaller from"./BehaviorInstaller";import{isFunction,isPlainObject}from"../utils/common";import{Collectors,Stream}from"../libs/Stream";export default class OptionInstaller extends BehaviorInstaller{install(e,t,l){return l}build(e,t,l){return{}}createRuntimeCompatibleContext(e){return new Proxy(e,{get(e,t,l){if(Reflect.has(e,t)){const a=Reflect.get(e,t);return isFunction(a)?a.bind(e):a}if(Reflect.has(e,"data")){var r=Reflect.get(e,"data");if(Reflect.has(r,t))return Reflect.get(r,t)}return Reflect.get(e,t)}})}createDynamicCompatibleContext(e,r,a,c,l){let n=null,i=null;const o=Object.create(new Proxy({},{get(e,t){return Reflect.has(n,t)||Reflect.has(i,t)||isFunction(l)&&l.call(void 0,t),Reflect.has(i,t)?Reflect.get(i,t):Reflect.get(n,t)}}));return Object.create(new Proxy(e,{get(e,t){if(n=isPlainObject(r)?r:{},i=isPlainObject(a)?Stream.of(Object.entries(a)).map(([e,t])=>[e,t.value]).collect(Collectors.toMap()):{},Reflect.has(n,t)||Reflect.has(i,t)){if(c&&Reflect.has(c,t))return Reflect.get(c,t);if(Reflect.has(e,t)){const l=Reflect.get(e,t);return isFunction(l)?l.bind(e):l}}else if("data"===t)return o;return Reflect.has(i,t)?Reflect.get(i,t):Reflect.get(n,t)}}))}createInitializationCompatibleContext(e,t,l,r){t=Object.assign({},isPlainObject(e)?e:null,isPlainObject(t)?Stream.of(Object.entries(t)).map(([e,t])=>[e,t.value]).collect(Collectors.toMap()):null);const a=Object.create(new Proxy(t,{get(e,t){return Reflect.has(e,t)||isFunction(r)&&r.call(void 0,t),Reflect.get(e,t)}}));return Object.create(new Proxy(t,{get(e,t){if(Reflect.has(e,t)){if(l&&Reflect.has(l,t))return Reflect.get(l,t)}else if("data"===t)return a;return Reflect.get(e,t)}}))}beforeCreate(){}created(){}beforeMount(){}mounted(){}beforeUpdate(){}updated(){}activated(){}deactivated(){}beforeDestroy(){}destroyed(){}}